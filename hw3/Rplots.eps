%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Abbas Rizvi
%%Title: Window .4.1
%%CreationDate: Fri Apr  8 16:18:19 2016
%%BoundingBox: 75 165 537 627
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Helvetica
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id$

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Helvetica
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
1.001 1.001 scale
-230 -230 translate
0 460 moveto 460 460 lineto 460 0 lineto 0 0 lineto closepath clip newpath
gsave
230.884850644706 425.821001375642 moveto
289.878763144741 254.919599211397 lineto
0 setlinecap
1 setlinejoin
1.5 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
292.054239526363 248.61739025053 moveto
294.519818682011 262.164379636635 lineto
288.847273965692 260.206258741141 lineto
287.429374103257 259.716810092043 lineto
281.756829386938 257.758689196549 lineto
292.054239526363 248.61739025053 lineto
fill
grestore
gsave
221.756957406374 425.609785710021 moveto
168.717325474822 245.31724239719 lineto
0 setlinecap
1 setlinejoin
1.5 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
166.835682444525 238.921153374985 moveto
176.699245847628 248.528968891166 lineto
170.942200784017 250.222613817221 lineto
169.503179355019 250.645954491956 lineto
163.746134291408 252.33959941801 lineto
166.835682444525 238.921153374985 lineto
fill
grestore
gsave
237.450154220835 34.3776320786221 moveto
290.77223246213 213.67026300245 lineto
0 setlinecap
1 setlinejoin
1.5 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
292.672782166949 220.06075954755 moveto
282.78084907952 210.482155171451 lineto
288.532860419774 208.771492568367 lineto
289.970623627636 208.343898183327 lineto
295.72263496789 206.633235580244 lineto
292.672782166949 220.06075954755 lineto
fill
grestore
gsave
228.281622434249 34.1796538493255 moveto
169.669496155035 204.048785043763 lineto
0 setlinecap
1 setlinejoin
1.5 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
167.494863633364 210.35128523568 moveto
165.027470612389 196.804626102151 lineto
170.700277462375 198.761987449154 lineto
172.118242847308 199.251246242773 lineto
177.791049697295 201.208607589776 lineto
167.494863633364 210.35128523568 lineto
fill
grestore
gsave
425.011409799242 239.436191243191 moveto
318.599368311949 235.28333387299 lineto
0 setlinecap
1 setlinejoin
1.5 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
311.937316218107 235.023339310797 moveto
324.192453072653 228.745471625321 lineto
323.958435002291 234.74190694497 lineto
323.899940233829 236.240765965046 lineto
323.665922163467 242.237201284696 lineto
311.937316218107 235.023339310797 lineto
fill
grestore
gsave
275.340280630726 232.844864989286 moveto
184.210721083802 226.124465721893 lineto
0 setlinecap
1 setlinejoin
1.5 setlinewidth
[] 0 setdash
0.804 0.149 0.149 setrgbcolor AdjustColor
stroke
281.989348444687 233.335204135968 moveto
269.524341178295 239.185297797508 lineto
269.96568972021 233.200549476605 lineto
270.07600846923 231.704611719339 lineto
270.517357011144 225.719863398436 lineto
281.989348444687 233.335204135968 lineto
fill
177.561653269841 225.63412657521 moveto
190.026660536233 219.78403291367 lineto
189.585311994318 225.768781234573 lineto
189.474993245298 227.264718991839 lineto
189.033644703384 233.249467312742 lineto
177.561653269841 225.63412657521 lineto
fill
grestore
gsave
34.887477354707 208.79891129721 moveto
141.097688370519 221.881983993045 lineto
0 setlinecap
1 setlinejoin
1.5 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
147.714798342472 222.69708576124 moveto
134.978467707633 227.930238153448 lineto
135.712131294028 221.974254713074 lineto
135.895516626404 220.485506977604 lineto
136.629180212799 214.529523537231 lineto
147.714798342472 222.69708576124 lineto
fill
grestore
gsave
matrix currentmatrix
225.99036415372 440 translate 15 15 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.745 0.745 0.745 setrgbcolor AdjustColor
fill
matrix currentmatrix
225.99036415372 440 translate 15 15 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 18 scalefont ISOEncode setfont
0.000 0.000 0.545 setrgbcolor AdjustColor
225.99036415372 440 [
[(burglary)]
] 20 -0.5 0.5 0 false DrawText
grestore
gsave
matrix currentmatrix
233.174210370435 20 translate 15 15 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.745 0.745 0.745 setrgbcolor AdjustColor
fill
matrix currentmatrix
233.174210370435 20 translate 15 15 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 18 scalefont ISOEncode setfont
0.000 0.000 0.545 setrgbcolor AdjustColor
233.174210370435 20 [
[(earthquake)]
] 20 -0.5 0.5 0 false DrawText
grestore
gsave
matrix currentmatrix
296.948726017349 234.438391626172 translate 15 15 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.745 0.745 0.745 setrgbcolor AdjustColor
fill
matrix currentmatrix
296.948726017349 234.438391626172 translate 15 15 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 18 scalefont ISOEncode setfont
0.000 0.000 0.545 setrgbcolor AdjustColor
296.948726017349 234.438391626172 [
[(john)]
] 20 -0.5 0.5 0 false DrawText
grestore
gsave
matrix currentmatrix
440 240.021138927816 translate 15 15 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.745 0.745 0.745 setrgbcolor AdjustColor
fill
matrix currentmatrix
440 240.021138927816 translate 15 15 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 18 scalefont ISOEncode setfont
0.000 0.000 0.545 setrgbcolor AdjustColor
440 240.021138927816 [
[(tv)]
] 20 -0.5 0.5 0 false DrawText
grestore
gsave
matrix currentmatrix
162.602275697179 224.530939085006 translate 15 15 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.745 0.745 0.745 setrgbcolor AdjustColor
fill
matrix currentmatrix
162.602275697179 224.530939085006 translate 15 15 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 18 scalefont ISOEncode setfont
0.000 0.000 0.545 setrgbcolor AdjustColor
162.602275697179 224.530939085006 [
[(mary)]
] 20 -0.5 0.5 0 false DrawText
grestore
gsave
matrix currentmatrix
20 206.965057973444 translate 15 15 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.745 0.745 0.745 setrgbcolor AdjustColor
fill
matrix currentmatrix
20 206.965057973444 translate 15 15 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 18 scalefont ISOEncode setfont
0.000 0.000 0.545 setrgbcolor AdjustColor
20 206.965057973444 [
[(nap)]
] 20 -0.5 0.5 0 false DrawText
grestore
restore showpage

%%Trailer
end
%%EOF
